-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Api.Enum.LocationCategory exposing (..)

import Json.Decode as Decode exposing (Decoder)


type LocationCategory
    = Bindstone
    | Dungeon
    | Portal
    | Settlement
    | Landmark
    | Zone


list : List LocationCategory
list =
    [ Bindstone, Dungeon, Portal, Settlement, Landmark, Zone ]


decoder : Decoder LocationCategory
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "bindstone" ->
                        Decode.succeed Bindstone

                    "dungeon" ->
                        Decode.succeed Dungeon

                    "portal" ->
                        Decode.succeed Portal

                    "settlement" ->
                        Decode.succeed Settlement

                    "landmark" ->
                        Decode.succeed Landmark

                    "zone" ->
                        Decode.succeed Zone

                    _ ->
                        Decode.fail ("Invalid LocationCategory type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
            )


{-| Convert from the union type representing the Enum to a string that the GraphQL server will recognize.
-}
toString : LocationCategory -> String
toString enum____ =
    case enum____ of
        Bindstone ->
            "bindstone"

        Dungeon ->
            "dungeon"

        Portal ->
            "portal"

        Settlement ->
            "settlement"

        Landmark ->
            "landmark"

        Zone ->
            "zone"


{-| Convert from a String representation to an elm representation enum.
This is the inverse of the Enum `toString` function. So you can call `toString` and then convert back `fromString` safely.

    Swapi.Enum.Episode.NewHope
        |> Swapi.Enum.Episode.toString
        |> Swapi.Enum.Episode.fromString
        == Just NewHope

This can be useful for generating Strings to use for <select> menus to check which item was selected.

-}
fromString : String -> Maybe LocationCategory
fromString enumString____ =
    case enumString____ of
        "bindstone" ->
            Just Bindstone

        "dungeon" ->
            Just Dungeon

        "portal" ->
            Just Portal

        "settlement" ->
            Just Settlement

        "landmark" ->
            Just Landmark

        "zone" ->
            Just Zone

        _ ->
            Nothing
