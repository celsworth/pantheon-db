-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Api.Object.QuestObjective exposing (..)

import Api.InputObject
import Api.Interface
import Api.Object
import Api.Scalar
import Api.ScalarCodecs
import Api.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


amount : SelectionSet (Maybe Int) Api.Object.QuestObjective
amount =
    Object.selectionForField "(Maybe Int)" "amount" [] (Decode.int |> Decode.nullable)


createdAt : SelectionSet Api.ScalarCodecs.ISO8601DateTime Api.Object.QuestObjective
createdAt =
    Object.selectionForField "ScalarCodecs.ISO8601DateTime" "createdAt" [] (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapCodecs |> .codecISO8601DateTime |> .decoder)


id : SelectionSet Api.ScalarCodecs.Id Api.Object.QuestObjective
id =
    Object.selectionForField "ScalarCodecs.Id" "id" [] (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapCodecs |> .codecId |> .decoder)


item :
    SelectionSet decodesTo Api.Object.Item
    -> SelectionSet (Maybe decodesTo) Api.Object.QuestObjective
item object____ =
    Object.selectionForCompositeField "item" [] object____ (Basics.identity >> Decode.nullable)


monster :
    SelectionSet decodesTo Api.Object.Monster
    -> SelectionSet (Maybe decodesTo) Api.Object.QuestObjective
monster object____ =
    Object.selectionForCompositeField "monster" [] object____ (Basics.identity >> Decode.nullable)


patch :
    SelectionSet decodesTo Api.Object.Patch
    -> SelectionSet decodesTo Api.Object.QuestObjective
patch object____ =
    Object.selectionForCompositeField "patch" [] object____ Basics.identity


quest :
    SelectionSet decodesTo Api.Object.Quest
    -> SelectionSet decodesTo Api.Object.QuestObjective
quest object____ =
    Object.selectionForCompositeField "quest" [] object____ Basics.identity


{-| A dynamically generated field that attempts to summarise the objective based on all the other fields, so for example if item is set, and amount is 10, this may return "10 Wolf Pelt"

This is mostly for convenience and is very rudimentary!

-}
readable : SelectionSet (Maybe String) Api.Object.QuestObjective
readable =
    Object.selectionForField "(Maybe String)" "readable" [] (Decode.string |> Decode.nullable)


text : SelectionSet (Maybe String) Api.Object.QuestObjective
text =
    Object.selectionForField "(Maybe String)" "text" [] (Decode.string |> Decode.nullable)


updatedAt : SelectionSet Api.ScalarCodecs.ISO8601DateTime Api.Object.QuestObjective
updatedAt =
    Object.selectionForField "ScalarCodecs.ISO8601DateTime" "updatedAt" [] (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapCodecs |> .codecISO8601DateTime |> .decoder)
