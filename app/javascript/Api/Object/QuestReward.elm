-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Api.Object.QuestReward exposing (..)

import Api.InputObject
import Api.Interface
import Api.Object
import Api.Scalar
import Api.ScalarCodecs
import Api.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


amount : SelectionSet (Maybe Float) Api.Object.QuestReward
amount =
    Object.selectionForField "(Maybe Float)" "amount" [] (Decode.float |> Decode.nullable)


copper : SelectionSet (Maybe Bool) Api.Object.QuestReward
copper =
    Object.selectionForField "(Maybe Bool)" "copper" [] (Decode.bool |> Decode.nullable)


createdAt : SelectionSet Api.ScalarCodecs.ISO8601DateTime Api.Object.QuestReward
createdAt =
    Object.selectionForField "ScalarCodecs.ISO8601DateTime" "createdAt" [] (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapCodecs |> .codecISO8601DateTime |> .decoder)


id : SelectionSet Api.ScalarCodecs.Id Api.Object.QuestReward
id =
    Object.selectionForField "ScalarCodecs.Id" "id" [] (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapCodecs |> .codecId |> .decoder)


item :
    SelectionSet decodesTo Api.Object.Item
    -> SelectionSet (Maybe decodesTo) Api.Object.QuestReward
item object____ =
    Object.selectionForCompositeField "item" [] object____ (Basics.identity >> Decode.nullable)


patch :
    SelectionSet decodesTo Api.Object.Patch
    -> SelectionSet decodesTo Api.Object.QuestReward
patch object____ =
    Object.selectionForCompositeField "patch" [] object____ Basics.identity


quest :
    SelectionSet decodesTo Api.Object.Quest
    -> SelectionSet decodesTo Api.Object.QuestReward
quest object____ =
    Object.selectionForCompositeField "quest" [] object____ Basics.identity


{-| A dynamically generated field that attempts to summarise the reward based on all the other fields, so for example if copper is true, and amount is 50, this will return "50 Copper"

This is mostly for convenience and is very rudimentary!

-}
readable : SelectionSet (Maybe String) Api.Object.QuestReward
readable =
    Object.selectionForField "(Maybe String)" "readable" [] (Decode.string |> Decode.nullable)


skill : SelectionSet (Maybe String) Api.Object.QuestReward
skill =
    Object.selectionForField "(Maybe String)" "skill" [] (Decode.string |> Decode.nullable)


standing : SelectionSet (Maybe Bool) Api.Object.QuestReward
standing =
    Object.selectionForField "(Maybe Bool)" "standing" [] (Decode.bool |> Decode.nullable)


text : SelectionSet (Maybe String) Api.Object.QuestReward
text =
    Object.selectionForField "(Maybe String)" "text" [] (Decode.string |> Decode.nullable)


updatedAt : SelectionSet Api.ScalarCodecs.ISO8601DateTime Api.Object.QuestReward
updatedAt =
    Object.selectionForField "ScalarCodecs.ISO8601DateTime" "updatedAt" [] (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapCodecs |> .codecISO8601DateTime |> .decoder)


xp : SelectionSet (Maybe Bool) Api.Object.QuestReward
xp =
    Object.selectionForField "(Maybe Bool)" "xp" [] (Decode.bool |> Decode.nullable)
