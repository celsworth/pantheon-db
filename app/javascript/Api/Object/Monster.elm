-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Api.Object.Monster exposing (..)

import Api.InputObject
import Api.Interface
import Api.Object
import Api.Scalar
import Api.ScalarCodecs
import Api.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


createdAt : SelectionSet Api.ScalarCodecs.ISO8601DateTime Api.Object.Monster
createdAt =
    Object.selectionForField "ScalarCodecs.ISO8601DateTime" "createdAt" [] (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapCodecs |> .codecISO8601DateTime |> .decoder)


drops :
    SelectionSet decodesTo Api.Object.Item
    -> SelectionSet (List decodesTo) Api.Object.Monster
drops object____ =
    Object.selectionForCompositeField "drops" [] object____ (Basics.identity >> Decode.list)


elite : SelectionSet Bool Api.Object.Monster
elite =
    Object.selectionForField "Bool" "elite" [] Decode.bool


id : SelectionSet Api.ScalarCodecs.Id Api.Object.Monster
id =
    Object.selectionForField "ScalarCodecs.Id" "id" [] (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapCodecs |> .codecId |> .decoder)


images :
    SelectionSet decodesTo Api.Object.Image
    -> SelectionSet (List decodesTo) Api.Object.Monster
images object____ =
    Object.selectionForCompositeField "images" [] object____ (Basics.identity >> Decode.list)


level : SelectionSet (Maybe Int) Api.Object.Monster
level =
    Object.selectionForField "(Maybe Int)" "level" [] (Decode.int |> Decode.nullable)


locX : SelectionSet (Maybe Float) Api.Object.Monster
locX =
    Object.selectionForField "(Maybe Float)" "locX" [] (Decode.float |> Decode.nullable)


locY : SelectionSet (Maybe Float) Api.Object.Monster
locY =
    Object.selectionForField "(Maybe Float)" "locY" [] (Decode.float |> Decode.nullable)


locZ : SelectionSet (Maybe Float) Api.Object.Monster
locZ =
    Object.selectionForField "(Maybe Float)" "locZ" [] (Decode.float |> Decode.nullable)


location :
    SelectionSet decodesTo Api.Object.Location
    -> SelectionSet decodesTo Api.Object.Monster
location object____ =
    Object.selectionForCompositeField "location" [] object____ Basics.identity


name : SelectionSet String Api.Object.Monster
name =
    Object.selectionForField "String" "name" [] Decode.string


named : SelectionSet Bool Api.Object.Monster
named =
    Object.selectionForField "Bool" "named" [] Decode.bool


patch :
    SelectionSet decodesTo Api.Object.Patch
    -> SelectionSet decodesTo Api.Object.Monster
patch object____ =
    Object.selectionForCompositeField "patch" [] object____ Basics.identity


questObjectives :
    SelectionSet decodesTo Api.Object.QuestObjective
    -> SelectionSet (List decodesTo) Api.Object.Monster
questObjectives object____ =
    Object.selectionForCompositeField "questObjectives" [] object____ (Basics.identity >> Decode.list)


{-| An array of Quests this Monster is listed as an objective for.
-}
requiredForQuests :
    SelectionSet decodesTo Api.Object.Quest
    -> SelectionSet (List decodesTo) Api.Object.Monster
requiredForQuests object____ =
    Object.selectionForCompositeField "requiredForQuests" [] object____ (Basics.identity >> Decode.list)


roamer : SelectionSet Bool Api.Object.Monster
roamer =
    Object.selectionForField "Bool" "roamer" [] Decode.bool


updatedAt : SelectionSet Api.ScalarCodecs.ISO8601DateTime Api.Object.Monster
updatedAt =
    Object.selectionForField "ScalarCodecs.ISO8601DateTime" "updatedAt" [] (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapCodecs |> .codecISO8601DateTime |> .decoder)


{-| Shortcut for location -> zone. May be removed.
-}
zone :
    SelectionSet decodesTo Api.Object.Zone
    -> SelectionSet decodesTo Api.Object.Monster
zone object____ =
    Object.selectionForCompositeField "zone" [] object____ Basics.identity
