-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module PantheonApi.Mutation exposing (..)

import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode exposing (Decoder)
import PantheonApi.InputObject
import PantheonApi.Interface
import PantheonApi.Object
import PantheonApi.Scalar
import PantheonApi.ScalarCodecs
import PantheonApi.Union


type alias AssignDroppedItemToMonsterRequiredArguments =
    { monsterId : PantheonApi.ScalarCodecs.Id
    , itemId : PantheonApi.ScalarCodecs.Id
    }


{-| Add an item to a monster's drop table

  - monsterId - ID of Monster to add to
  - itemId - Item ID to add

-}
assignDroppedItemToMonster :
    AssignDroppedItemToMonsterRequiredArguments
    -> SelectionSet decodesTo PantheonApi.Object.SuccessResult
    -> SelectionSet (Maybe decodesTo) RootMutation
assignDroppedItemToMonster requiredArgs____ object____ =
    Object.selectionForCompositeField "assignDroppedItemToMonster" [ Argument.required "monsterId" requiredArgs____.monsterId (PantheonApi.ScalarCodecs.codecs |> PantheonApi.Scalar.unwrapEncoder .codecId), Argument.required "itemId" requiredArgs____.itemId (PantheonApi.ScalarCodecs.codecs |> PantheonApi.Scalar.unwrapEncoder .codecId) ] object____ (Basics.identity >> Decode.nullable)


type alias AssignSoldItemToNpcRequiredArguments =
    { npcId : PantheonApi.ScalarCodecs.Id
    , itemId : PantheonApi.ScalarCodecs.Id
    }


{-| Add an item to an NPC's vendor sell list

  - npcId - ID of NPC to add to
  - itemId - Item ID to add

-}
assignSoldItemToNpc :
    AssignSoldItemToNpcRequiredArguments
    -> SelectionSet decodesTo PantheonApi.Object.SuccessResult
    -> SelectionSet (Maybe decodesTo) RootMutation
assignSoldItemToNpc requiredArgs____ object____ =
    Object.selectionForCompositeField "assignSoldItemToNpc" [ Argument.required "npcId" requiredArgs____.npcId (PantheonApi.ScalarCodecs.codecs |> PantheonApi.Scalar.unwrapEncoder .codecId), Argument.required "itemId" requiredArgs____.itemId (PantheonApi.ScalarCodecs.codecs |> PantheonApi.Scalar.unwrapEncoder .codecId) ] object____ (Basics.identity >> Decode.nullable)


type alias CreateItemRequiredArguments =
    { attributes : PantheonApi.InputObject.ItemAttributes }


createItem :
    CreateItemRequiredArguments
    -> SelectionSet decodesTo PantheonApi.Object.ItemResult
    -> SelectionSet (Maybe decodesTo) RootMutation
createItem requiredArgs____ object____ =
    Object.selectionForCompositeField "createItem" [ Argument.required "attributes" requiredArgs____.attributes PantheonApi.InputObject.encodeItemAttributes ] object____ (Basics.identity >> Decode.nullable)


type alias CreateMonsterRequiredArguments =
    { attributes : PantheonApi.InputObject.MonsterAttributes }


createMonster :
    CreateMonsterRequiredArguments
    -> SelectionSet decodesTo PantheonApi.Object.MonsterResult
    -> SelectionSet (Maybe decodesTo) RootMutation
createMonster requiredArgs____ object____ =
    Object.selectionForCompositeField "createMonster" [ Argument.required "attributes" requiredArgs____.attributes PantheonApi.InputObject.encodeMonsterAttributes ] object____ (Basics.identity >> Decode.nullable)


type alias CreateNpcRequiredArguments =
    { attributes : PantheonApi.InputObject.NpcAttributes }


createNpc :
    CreateNpcRequiredArguments
    -> SelectionSet decodesTo PantheonApi.Object.NpcResult
    -> SelectionSet (Maybe decodesTo) RootMutation
createNpc requiredArgs____ object____ =
    Object.selectionForCompositeField "createNpc" [ Argument.required "attributes" requiredArgs____.attributes PantheonApi.InputObject.encodeNpcAttributes ] object____ (Basics.identity >> Decode.nullable)


type alias CreateQuestRequiredArguments =
    { attributes : PantheonApi.InputObject.QuestAttributes }


createQuest :
    CreateQuestRequiredArguments
    -> SelectionSet decodesTo PantheonApi.Object.QuestResult
    -> SelectionSet (Maybe decodesTo) RootMutation
createQuest requiredArgs____ object____ =
    Object.selectionForCompositeField "createQuest" [ Argument.required "attributes" requiredArgs____.attributes PantheonApi.InputObject.encodeQuestAttributes ] object____ (Basics.identity >> Decode.nullable)


type alias CreateQuestObjectiveRequiredArguments =
    { attributes : PantheonApi.InputObject.QuestObjectiveAttributes }


createQuestObjective :
    CreateQuestObjectiveRequiredArguments
    -> SelectionSet decodesTo PantheonApi.Object.QuestObjectiveResult
    -> SelectionSet (Maybe decodesTo) RootMutation
createQuestObjective requiredArgs____ object____ =
    Object.selectionForCompositeField "createQuestObjective" [ Argument.required "attributes" requiredArgs____.attributes PantheonApi.InputObject.encodeQuestObjectiveAttributes ] object____ (Basics.identity >> Decode.nullable)


type alias CreateQuestRewardRequiredArguments =
    { attributes : PantheonApi.InputObject.QuestRewardAttributes }


createQuestReward :
    CreateQuestRewardRequiredArguments
    -> SelectionSet decodesTo PantheonApi.Object.QuestRewardResult
    -> SelectionSet (Maybe decodesTo) RootMutation
createQuestReward requiredArgs____ object____ =
    Object.selectionForCompositeField "createQuestReward" [ Argument.required "attributes" requiredArgs____.attributes PantheonApi.InputObject.encodeQuestRewardAttributes ] object____ (Basics.identity >> Decode.nullable)


type alias CreateResourceRequiredArguments =
    { attributes : PantheonApi.InputObject.ResourceAttributes }


createResource :
    CreateResourceRequiredArguments
    -> SelectionSet decodesTo PantheonApi.Object.ResourceResult
    -> SelectionSet (Maybe decodesTo) RootMutation
createResource requiredArgs____ object____ =
    Object.selectionForCompositeField "createResource" [ Argument.required "attributes" requiredArgs____.attributes PantheonApi.InputObject.encodeResourceAttributes ] object____ (Basics.identity >> Decode.nullable)


type alias CreateZoneRequiredArguments =
    { attributes : PantheonApi.InputObject.ZoneAttributes }


createZone :
    CreateZoneRequiredArguments
    -> SelectionSet decodesTo PantheonApi.Object.ZoneResult
    -> SelectionSet (Maybe decodesTo) RootMutation
createZone requiredArgs____ object____ =
    Object.selectionForCompositeField "createZone" [ Argument.required "attributes" requiredArgs____.attributes PantheonApi.InputObject.encodeZoneAttributes ] object____ (Basics.identity >> Decode.nullable)


type alias DeleteItemRequiredArguments =
    { id : PantheonApi.ScalarCodecs.Id }


deleteItem :
    DeleteItemRequiredArguments
    -> SelectionSet decodesTo PantheonApi.Object.ItemResult
    -> SelectionSet (Maybe decodesTo) RootMutation
deleteItem requiredArgs____ object____ =
    Object.selectionForCompositeField "deleteItem" [ Argument.required "id" requiredArgs____.id (PantheonApi.ScalarCodecs.codecs |> PantheonApi.Scalar.unwrapEncoder .codecId) ] object____ (Basics.identity >> Decode.nullable)


type alias DeleteMonsterRequiredArguments =
    { id : PantheonApi.ScalarCodecs.Id }


deleteMonster :
    DeleteMonsterRequiredArguments
    -> SelectionSet decodesTo PantheonApi.Object.MonsterResult
    -> SelectionSet (Maybe decodesTo) RootMutation
deleteMonster requiredArgs____ object____ =
    Object.selectionForCompositeField "deleteMonster" [ Argument.required "id" requiredArgs____.id (PantheonApi.ScalarCodecs.codecs |> PantheonApi.Scalar.unwrapEncoder .codecId) ] object____ (Basics.identity >> Decode.nullable)


type alias DeleteNpcRequiredArguments =
    { id : PantheonApi.ScalarCodecs.Id }


deleteNpc :
    DeleteNpcRequiredArguments
    -> SelectionSet decodesTo PantheonApi.Object.NpcResult
    -> SelectionSet (Maybe decodesTo) RootMutation
deleteNpc requiredArgs____ object____ =
    Object.selectionForCompositeField "deleteNpc" [ Argument.required "id" requiredArgs____.id (PantheonApi.ScalarCodecs.codecs |> PantheonApi.Scalar.unwrapEncoder .codecId) ] object____ (Basics.identity >> Decode.nullable)


type alias RemoveDroppedItemFromMonsterRequiredArguments =
    { monsterId : PantheonApi.ScalarCodecs.Id
    , itemId : PantheonApi.ScalarCodecs.Id
    }


{-| Remove an item from a monster's drop table.
This never fails, removing an item that was not present is a no-op and will return success true.

  - monsterId - ID of Monster to remove from
  - itemId - Item ID to remove

-}
removeDroppedItemFromMonster :
    RemoveDroppedItemFromMonsterRequiredArguments
    -> SelectionSet decodesTo PantheonApi.Object.SuccessResult
    -> SelectionSet (Maybe decodesTo) RootMutation
removeDroppedItemFromMonster requiredArgs____ object____ =
    Object.selectionForCompositeField "removeDroppedItemFromMonster" [ Argument.required "monsterId" requiredArgs____.monsterId (PantheonApi.ScalarCodecs.codecs |> PantheonApi.Scalar.unwrapEncoder .codecId), Argument.required "itemId" requiredArgs____.itemId (PantheonApi.ScalarCodecs.codecs |> PantheonApi.Scalar.unwrapEncoder .codecId) ] object____ (Basics.identity >> Decode.nullable)


type alias RemoveSoldItemFromNpcRequiredArguments =
    { npcId : PantheonApi.ScalarCodecs.Id
    , itemId : PantheonApi.ScalarCodecs.Id
    }


{-| Remove an item from an NPC's vendor sell list.
This never fails, removing an item that was not present is a no-op and will return success true.

  - npcId - ID of NPC to remove from
  - itemId - Item ID to remove

-}
removeSoldItemFromNpc :
    RemoveSoldItemFromNpcRequiredArguments
    -> SelectionSet decodesTo PantheonApi.Object.SuccessResult
    -> SelectionSet (Maybe decodesTo) RootMutation
removeSoldItemFromNpc requiredArgs____ object____ =
    Object.selectionForCompositeField "removeSoldItemFromNpc" [ Argument.required "npcId" requiredArgs____.npcId (PantheonApi.ScalarCodecs.codecs |> PantheonApi.Scalar.unwrapEncoder .codecId), Argument.required "itemId" requiredArgs____.itemId (PantheonApi.ScalarCodecs.codecs |> PantheonApi.Scalar.unwrapEncoder .codecId) ] object____ (Basics.identity >> Decode.nullable)


type alias UpdateItemRequiredArguments =
    { id : PantheonApi.ScalarCodecs.Id
    , attributes : PantheonApi.InputObject.ItemAttributes
    }


updateItem :
    UpdateItemRequiredArguments
    -> SelectionSet decodesTo PantheonApi.Object.ItemResult
    -> SelectionSet (Maybe decodesTo) RootMutation
updateItem requiredArgs____ object____ =
    Object.selectionForCompositeField "updateItem" [ Argument.required "id" requiredArgs____.id (PantheonApi.ScalarCodecs.codecs |> PantheonApi.Scalar.unwrapEncoder .codecId), Argument.required "attributes" requiredArgs____.attributes PantheonApi.InputObject.encodeItemAttributes ] object____ (Basics.identity >> Decode.nullable)


type alias UpdateMonsterRequiredArguments =
    { id : PantheonApi.ScalarCodecs.Id
    , attributes : PantheonApi.InputObject.MonsterAttributes
    }


updateMonster :
    UpdateMonsterRequiredArguments
    -> SelectionSet decodesTo PantheonApi.Object.MonsterResult
    -> SelectionSet (Maybe decodesTo) RootMutation
updateMonster requiredArgs____ object____ =
    Object.selectionForCompositeField "updateMonster" [ Argument.required "id" requiredArgs____.id (PantheonApi.ScalarCodecs.codecs |> PantheonApi.Scalar.unwrapEncoder .codecId), Argument.required "attributes" requiredArgs____.attributes PantheonApi.InputObject.encodeMonsterAttributes ] object____ (Basics.identity >> Decode.nullable)


type alias UpdateNpcRequiredArguments =
    { id : PantheonApi.ScalarCodecs.Id
    , attributes : PantheonApi.InputObject.NpcAttributes
    }


updateNpc :
    UpdateNpcRequiredArguments
    -> SelectionSet decodesTo PantheonApi.Object.NpcResult
    -> SelectionSet (Maybe decodesTo) RootMutation
updateNpc requiredArgs____ object____ =
    Object.selectionForCompositeField "updateNpc" [ Argument.required "id" requiredArgs____.id (PantheonApi.ScalarCodecs.codecs |> PantheonApi.Scalar.unwrapEncoder .codecId), Argument.required "attributes" requiredArgs____.attributes PantheonApi.InputObject.encodeNpcAttributes ] object____ (Basics.identity >> Decode.nullable)


type alias UpdateQuestRequiredArguments =
    { id : PantheonApi.ScalarCodecs.Id
    , attributes : PantheonApi.InputObject.QuestAttributes
    }


updateQuest :
    UpdateQuestRequiredArguments
    -> SelectionSet decodesTo PantheonApi.Object.QuestResult
    -> SelectionSet (Maybe decodesTo) RootMutation
updateQuest requiredArgs____ object____ =
    Object.selectionForCompositeField "updateQuest" [ Argument.required "id" requiredArgs____.id (PantheonApi.ScalarCodecs.codecs |> PantheonApi.Scalar.unwrapEncoder .codecId), Argument.required "attributes" requiredArgs____.attributes PantheonApi.InputObject.encodeQuestAttributes ] object____ (Basics.identity >> Decode.nullable)


type alias UpdateQuestObjectiveRequiredArguments =
    { id : PantheonApi.ScalarCodecs.Id
    , attributes : PantheonApi.InputObject.QuestObjectiveAttributes
    }


updateQuestObjective :
    UpdateQuestObjectiveRequiredArguments
    -> SelectionSet decodesTo PantheonApi.Object.QuestResult
    -> SelectionSet (Maybe decodesTo) RootMutation
updateQuestObjective requiredArgs____ object____ =
    Object.selectionForCompositeField "updateQuestObjective" [ Argument.required "id" requiredArgs____.id (PantheonApi.ScalarCodecs.codecs |> PantheonApi.Scalar.unwrapEncoder .codecId), Argument.required "attributes" requiredArgs____.attributes PantheonApi.InputObject.encodeQuestObjectiveAttributes ] object____ (Basics.identity >> Decode.nullable)


type alias UpdateQuestRewardRequiredArguments =
    { id : PantheonApi.ScalarCodecs.Id
    , attributes : PantheonApi.InputObject.QuestRewardAttributes
    }


updateQuestReward :
    UpdateQuestRewardRequiredArguments
    -> SelectionSet decodesTo PantheonApi.Object.QuestResult
    -> SelectionSet (Maybe decodesTo) RootMutation
updateQuestReward requiredArgs____ object____ =
    Object.selectionForCompositeField "updateQuestReward" [ Argument.required "id" requiredArgs____.id (PantheonApi.ScalarCodecs.codecs |> PantheonApi.Scalar.unwrapEncoder .codecId), Argument.required "attributes" requiredArgs____.attributes PantheonApi.InputObject.encodeQuestRewardAttributes ] object____ (Basics.identity >> Decode.nullable)


type alias UpdateResourceRequiredArguments =
    { id : PantheonApi.ScalarCodecs.Id
    , attributes : PantheonApi.InputObject.ResourceAttributes
    }


updateResource :
    UpdateResourceRequiredArguments
    -> SelectionSet decodesTo PantheonApi.Object.ResourceResult
    -> SelectionSet (Maybe decodesTo) RootMutation
updateResource requiredArgs____ object____ =
    Object.selectionForCompositeField "updateResource" [ Argument.required "id" requiredArgs____.id (PantheonApi.ScalarCodecs.codecs |> PantheonApi.Scalar.unwrapEncoder .codecId), Argument.required "attributes" requiredArgs____.attributes PantheonApi.InputObject.encodeResourceAttributes ] object____ (Basics.identity >> Decode.nullable)


type alias UpdateZoneRequiredArguments =
    { id : PantheonApi.ScalarCodecs.Id
    , attributes : PantheonApi.InputObject.ZoneAttributes
    }


updateZone :
    UpdateZoneRequiredArguments
    -> SelectionSet decodesTo PantheonApi.Object.ZoneResult
    -> SelectionSet (Maybe decodesTo) RootMutation
updateZone requiredArgs____ object____ =
    Object.selectionForCompositeField "updateZone" [ Argument.required "id" requiredArgs____.id (PantheonApi.ScalarCodecs.codecs |> PantheonApi.Scalar.unwrapEncoder .codecId), Argument.required "attributes" requiredArgs____.attributes PantheonApi.InputObject.encodeZoneAttributes ] object____ (Basics.identity >> Decode.nullable)
